import os
import dashscope
import json
import argparse
from tqdm import tqdm
import random


check_str = input("需要处理的类别：")
type_str = input("#选择应用的prompt类型(1、模型自由推理(不给模型类别信息)，要求推理格式。2、给出图片类别信息，3、给出图片类别信息并要求模型推理字数在100以内：)")
#check_str = "商品详情页截图"
file_name = "E:\\天池比赛\\tianchi\\train\\train.json"




prompt1 = """
# 你是一个电商领域识图专家,可以理解消费者上传的软件截图或实物拍摄图。 

# 上传的图片属于如下的分类标签中的一类:
    [\"实物拍摄(含售后)\",\"商品分类选项\",\"商品头图\",\"商品详情页截图\",\"下单过程中出现异常（显示购买失败浮窗）\",\"订单详情页面\",\"支付页面\",\"评论区截图页面\",\"物流页面-物流列表页面\",\"物流页面-物流跟踪页面\",\"物流页面-物流异常页面\",\"退款页面\",\"退货页面\",\"换货页面\",\"购物车页面\",\"店铺页面\",\"活动页面\",\"优惠券领取页面\",\"账单/账户页面\",\"投诉举报页面\",\"平台介入页面\",\"外部APP截图\",\"其他类别图片\"]

# 各个标签的定义如下：
    "实物拍摄(含售后)":用户用相机实拍的照片，包括用户售后的照片（损坏、缺失、与描述不符），或者其他用相机实拍的图片。
    "商品分类选项":商品颜色、规格选项。
    "商品头图":商品首页大图。
    "商品详情页截图":可能出现在商品详情页各个部分的截图。
    "下单过程中出现异常（显示购买失败浮窗）":下单过程中出现异常（显示购买失败浮窗）的截图。
    "订单详情页面":呈现出完整订单信息的订单页面。
    "支付页面":包含支付方式选择、支付成功的页面。
    "评论区截图页面":在淘宝APP内或其他APP内的评论区截图。
    "物流页面-物流列表页面":呈现出两个以上物流信息的页面。
    "物流页面-物流跟踪页面":呈现出物流运输路径的页面。
    "物流页面-物流异常页面":包含物流异常信息的页面。
    "退款页面":含有退款信息的页面。
    "退货页面":含有退货信息的页面。
    "换货页面":含有换货信息的页面。
    "购物车页面":淘宝购物车页面的列表图或金额计算图。
    "店铺页面":店铺首页截图。
    "活动页面":活动截图。
    "优惠券领取页面":店铺首页或活动页中领取优惠券的截图。
    "账单/账户页面":包含交易明细列表、资产列表、卡券红包列表等。
    "投诉举报页面":	投诉或举报页面。
    "实物拍摄(含售后)":用户用相机实拍的照片，包括用户售后的照片（损坏、缺失、与描述不符），或者其他用相机实拍的图片。
    "平台介入页面":平台客服介入处理的截图。
    "外部APP截图":各种非淘宝、菜鸟APP的截图，包括京东、拼多多、短信、手机系统截图。
    "其他类别图片":拿不准的其他图片。

# 现在,请你根据图片中的信息按如下步骤逐步推理得到分类标签。
    推理步骤：
    这张图片显示的是xxxx页面,包含了xxxx等信息。符合类别"xxxx"的定义:"xxxx",因此，这张图片的分类标签是"xxxx
"""

prompt2="""
# 你是一个电商领域识图专家,可以理解消费者上传的软件截图或实物拍摄图。 

# 上传的图片属于如下的分类标签中的一类:
    [\"实物拍摄(含售后)\",\"商品分类选项\",\"商品头图\",\"商品详情页截图\",\"下单过程中出现异常（显示购买失败浮窗）\",\"订单详情页面\",\"支付页面\",\"评论区截图页面\",\"物流页面-物流列表页面\",\"物流页面-物流跟踪页面\",\"物流页面-物流异常页面\",\"退款页面\",\"退货页面\",\"换货页面\",\"购物车页面\",\"店铺页面\",\"活动页面\",\"优惠券领取页面\",\"账单/账户页面\",\"投诉举报页面\",\"平台介入页面\",\"外部APP截图\",\"其他类别图片\"]

# 各个标签的定义如下：
    "实物拍摄(含售后)":用户用相机实拍的照片，包括用户售后的照片（损坏、缺失、与描述不符），或者其他用相机实拍的图片。
    "商品分类选项":商品颜色、规格选项。
    "商品头图":商品首页大图。
    "商品详情页截图":可能出现在商品详情页各个部分的截图。
    "下单过程中出现异常（显示购买失败浮窗）":下单过程中出现异常（显示购买失败浮窗）的截图。
    "订单详情页面":呈现出完整订单信息的订单页面。
    "支付页面":包含支付方式选择、支付成功的页面。
    "评论区截图页面":在淘宝APP内或其他APP内的评论区截图。
    "物流页面-物流列表页面":呈现出两个以上物流信息的页面。
    "物流页面-物流跟踪页面":呈现出物流运输路径的页面。
    "物流页面-物流异常页面":包含物流异常信息的页面。
    "退款页面":含有退款信息的页面。
    "退货页面":含有退货信息的页面。
    "换货页面":含有换货信息的页面。
    "购物车页面":淘宝购物车页面的列表图或金额计算图。
    "店铺页面":店铺首页截图。
    "活动页面":活动截图。
    "优惠券领取页面":店铺首页或活动页中领取优惠券的截图。
    "账单/账户页面":包含交易明细列表、资产列表、卡券红包列表等。
    "投诉举报页面":	投诉或举报页面。
    "实物拍摄(含售后)":用户用相机实拍的照片，包括用户售后的照片（损坏、缺失、与描述不符），或者其他用相机实拍的图片。
    "平台介入页面":平台客服介入处理的截图。
    "外部APP截图":各种非淘宝、菜鸟APP的截图，包括京东、拼多多、短信、手机系统截图。
    "其他类别图片":拿不准的其他图片。

# 现在,请你根据图片中的信息以及类别标签的定义,按如下推理步骤解释这张图片的分类标签为"{}"的原因。
    推理步骤：
    这张图片显示的是xxxx页面,包含了xxxx等信息。符合类别"xxxx"的定义:"xxxx",因此，这张图片的分类标签是"xxxx
""".format(check_str)
prompt3 = """
# 你是一个电商领域识图专家,可以理解消费者上传的软件截图或实物拍摄图。 

# 上传的图片属于如下的分类标签中的一类:
    [\"实物拍摄(含售后)\",\"商品分类选项\",\"商品头图\",\"商品详情页截图\",\"下单过程中出现异常（显示购买失败浮窗）\",\"订单详情页面\",\"支付页面\",\"评论区截图页面\",\"物流页面-物流列表页面\",\"物流页面-物流跟踪页面\",\"物流页面-物流异常页面\",\"退款页面\",\"退货页面\",\"换货页面\",\"购物车页面\",\"店铺页面\",\"活动页面\",\"优惠券领取页面\",\"账单/账户页面\",\"投诉举报页面\",\"平台介入页面\",\"外部APP截图\",\"其他类别图片\"]

# 各个标签的定义如下：
    "实物拍摄(含售后)":用户用相机实拍的照片，包括用户售后的照片（损坏、缺失、与描述不符），或者其他用相机实拍的图片。
    "商品分类选项":商品颜色、规格选项。
    "商品头图":商品首页大图。
    "商品详情页截图":可能出现在商品详情页各个部分的截图。
    "下单过程中出现异常（显示购买失败浮窗）":下单过程中出现异常（显示购买失败浮窗）的截图。
    "订单详情页面":呈现出完整订单信息的订单页面。
    "支付页面":包含支付方式选择、支付成功的页面。
    "评论区截图页面":在淘宝APP内或其他APP内的评论区截图。
    "物流页面-物流列表页面":呈现出两个以上物流信息的页面。
    "物流页面-物流跟踪页面":呈现出物流运输路径的页面。
    "物流页面-物流异常页面":包含物流异常信息的页面。
    "退款页面":含有退款信息的页面。
    "退货页面":含有退货信息的页面。
    "换货页面":含有换货信息的页面。
    "购物车页面":淘宝购物车页面的列表图或金额计算图。
    "店铺页面":店铺首页截图。
    "活动页面":活动截图。
    "优惠券领取页面":店铺首页或活动页中领取优惠券的截图。
    "账单/账户页面":包含交易明细列表、资产列表、卡券红包列表等。
    "投诉举报页面":	投诉或举报页面。
    "实物拍摄(含售后)":用户用相机实拍的照片，包括用户售后的照片（损坏、缺失、与描述不符），或者其他用相机实拍的图片。
    "平台介入页面":平台客服介入处理的截图。
    "外部APP截图":各种非淘宝、菜鸟APP的截图，包括京东、拼多多、短信、手机系统截图。
    "其他类别图片":拿不准的其他图片。

# 现在,请你根据图片中的信息以及类别标签的定义,按如下推理步骤解释这张图片的分类标签为"{}"的原因,请将推理字数限制在100字以内。
    推理步骤：
    这张图片显示的是xxxx页面,包含了xxxx等信息。符合类别"xxxx"的定义:"xxxx",因此，这张图片的分类标签是"xxxx
""".format(check_str)

#1、模型自由推理(不给模型类别信息)，要求推理格式
if type_str == "1":
    prompt = prompt1
    save_path="E:\\天池比赛\\tianchi\\train\\reasonbyQwen72b_model1\\save_train_{}_1.json".format(check_str)
#2、给出图片类别信息
elif type_str == "2":
    prompt = prompt2
    save_path="E:\\天池比赛\\tianchi\\train\\reasonbyQwen72b_model2\\save_train_{}_2.json".format(check_str)
#3、给出图片类别信息并要求模型推理字数在100以内：
elif type_str == "3":
    prompt = prompt3
    save_path="E:\\天池比赛\\tianchi\\train\\reasonbyQwen72b_model3\\save_train_{}_3.json".format(check_str)
else:
    prompt = prompt3
    save_path="E:\\天池比赛\\tianchi\\train\\reasonbyQwen72b_model3\\save_train_{}_3.json".format(check_str)
    print("默认模式3\n")


save_list=[]
with open(file_name, 'r',encoding="utf-8") as train_file:
    train_data = json.load(train_file)
    
    ### 如下两行如果出现断点，请取消注释，并将上次的断点id填入.并注意将save_path修改
    # flag = False ##指示是否到达上次的断点，Flase未还没到，True为到了
    # id_need_check = "4b94023a-6a7e-4044-ad97-86cf0a9c5647-348"


    for i in tqdm(range(0,len(train_data))):
        ## 断线重连
        # if train_data[i]['id'] == "4b94023a-6a7e-4044-ad97-86cf0a9c5647-348":
        #     break
            #flag = True
        # if flag == False:
        #     continue
        #print("id:\n{}\n".format(train_data[i]['id']))
        ### 换货页面里面有一个不当内容
        # if (train_data[i]['id']=="9e2a1ebe-87c3-4547-b405-b592aaabfdab-1384"):
        #     continue

        if (check_str in train_data[i]['output']):  

            ###
            messages = [
                {
                    "role": "user",
                    "content": [
                        {"text": prompt}]+
                        [
                        {"image": train_data[i]['image'][j]} for j in range(len(train_data[i]['image']))
                    ]
                }
            ]
            #出错情况下，会被取消注释
            print("mrssages:{}\n".format(messages)) 
            try:
                response = dashscope.MultiModalConversation.call(
                    # 若没有配置环境变量，请用百炼API Key将下行替换为：api_key="sk-xxx",
                    api_key='sk-5db6132db02e4528ad286bbdab49e1d0',
                    model='qwen-vl-max',
                    messages=messages,
                    max_tokens=100,
                    )
                print("now response:\n{}\n".format(response))
            except:
                print("error:{}".format(train_data[i]['id']))
            train_data[i]["output"]=response['output']['choices'][0]['message']['content'][0]['text']
            train_data[i]["output_tokens"] = response['usage']['output_tokens']
            save_list.append(train_data[i])
            os.makedirs(os.path.dirname(save_path), exist_ok=True)
            with open(save_path, 'w',encoding="utf-8") as writer:
                json.dump(save_list, writer, ensure_ascii=False, indent=4)

print("{}Category inference completed, The result has been saved to{}\n".format(check_str,save_path))
